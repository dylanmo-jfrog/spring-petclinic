name: Jfrog Build

on:
  workflow_dispatch: # The repository will be scanned on demand
  push:
    branches:
      - main
      - develop
      - 'release/*'

env:
  JFROG_CLI_AVOID_NEW_VERSION_WARNING: 'true'
  
permissions:
  actions: read           # for detecting the Github Actions environment
  id-token: write         # for creating OIDC tokens for signing
  contents: write         # for creating fixing pull requests and pushing changes
  pull-requests: write    # for creating pull requests to fix vulnerabilities
  security-events: write  # for uploading SARIF results to GitHub Code Scanning

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven     

      - name: Setup JFrog CLI 
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_PROJECT: ${{ vars.JF_PROJECT }}
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            oidc-provider-name: setup-jfrog-cli
            oidc-audience: jfrog-github
          
      - name: Deploy with Maven
        run: |
          # Temporarily rename Gradle files to force Maven detection
          if [ -f "build.gradle" ]; then mv build.gradle build.gradle.bak; fi
          if [ -f "settings.gradle" ]; then mv settings.gradle settings.gradle.bak; fi
          
          jf mvn-config --repo-resolve-releases spc-dev-libs-release --repo-resolve-snapshots spc-dev-libs-snapshot --repo-deploy-releases spc-dev-libs-release --repo-deploy-snapshots spc-dev-libs-snapshot
          JF_DEPS_REPO="spc-dev-libs-snapshot"
          jf ca
          
          # Restore Gradle files
          if [ -f "build.gradle.bak" ]; then mv build.gradle.bak build.gradle; fi
          if [ -f "settings.gradle.bak" ]; then mv settings.gradle.bak settings.gradle; fi
          
          jf mvn deploy -DskipTests 

      - name: Publish Build Info
        run: |
          jf rt build-collect-env
          jf rt build-add-git
          jf rt build-publish

      - name: JFrog Frogbot Repository Scan
        uses: jfrog/frogbot@v2
        with:
          oidc-provider-name: setup-jfrog-cli
          oidc-audience: jfrog-github
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JF_PROJECT: ${{ vars.JF_PROJECT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JF_MIN_SEVERITY: "High"    