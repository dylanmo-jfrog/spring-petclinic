# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-maven

name: Java CI with Maven using Jfrog Artifactory

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4
      - name: Configure Maven settings for JFrog
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>brianchu-mvn-virtual</id>
                <username>${{ secrets.ARTIFACTORY_USER }}</username>
                <password>${{ secrets.ARTIFACTORY_PASS }}</password>
              </server>
            </servers>
            <mirrors>
              <mirror>
                <id>artifactory</id>
                <mirrorOf>*</mirrorOf>
                <url>https://soleng.jfrog.io/artifactory/brianchu-mvn-virtual</url>
              </mirror>
            </mirrors>
          </settings>
          EOF
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw -B verify
      - name: Log in to JFrog Docker
        run: echo "${{ secrets.ARTIFACTORY_PASS }}" | docker login soleng.jfrog.io -u ${{ secrets.ARTIFACTORY_USER }} --password-stdin

      - name: Build Docker image
        run: docker build -t soleng.jfrog.io/dylanmo-docker-virtual/spring-petclinic:1.0.${{ github.run_number }} .

      - name: Push Docker image
        run: docker push soleng.jfrog.io/dylanmo-docker-virtual/spring-petclinic:1.0.${{ github.run_number }}
